name: 5e Tools Data Cache
on:
  schedule:
    - cron: "7 9 * * */5"

  workflow_call:
    outputs:
      cache_key:
        description: "Cache key for current version"
        value: ${{ jobs.tools5e_cache.outputs.cache_key }}
      restore_key:
        description: "Cache recovery keys"
        value: |
          ${{ jobs.tools5e_cache.outputs.cache_key_prefix }}
  workflow_dispatch:

permissions:
  contents: read
  actions: read

jobs:
  tools5e_cache:
    runs-on: ubuntu-latest
    outputs:
      cache_key: ${{ steps.test_data_key.outputs.cache_key }}
      cache_key_prefix: ${{ steps.test_data_key.outputs.cache_key_prefix }}
    concurrency:
      group: 5etools-data

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1

      - name: Tools release cache key
        id: test_data_key
        run: |
          LATEST_VERSION=$(curl -sLH 'Accept: application/json' https://api.github.com/repos/5etools-mirror-3/5etools-src/releases/latest | jq -r .tag_name)
          echo $LATEST_VERSION

          echo "ðŸ”¹ Use $LATEST_VERSION"
          echo "tools_version=${LATEST_VERSION}" >> $GITHUB_OUTPUT
          echo "cache_key_prefix=Data-5etools-" >> $GITHUB_OUTPUT
          echo "cache_key=Data-5etools-${LATEST_VERSION}" >> $GITHUB_OUTPUT

      - name: Check Cache Data
        id: test_data_check
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: sources
          key: ${{ steps.test_data_key.outputs.cache_key }}
          lookup-only: true
          enableCrossOsArchive: true

      - name: Download Test Data
        id: test-data-download
        if: steps.test_data_check.outputs.cache-hit != 'true'
        env:
          LATEST_VERSION: ${{ steps.test_data_key.outputs.tools_version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "ðŸ”¹ Download $LATEST_VERSION"

          # sparse clone of src
          mkdir -p sources/5etools-src
          git clone --quiet --depth=1 -b ${LATEST_VERSION} -c advice.detachedHead=false --no-checkout https://github.com/5etools-mirror-3/5etools-src.git sources/5etools-src
          pushd sources/5etools-src
            git sparse-checkout init
            git sparse-checkout set data
            git checkout ${LATEST_VERSION}
            rm -rf .git
            rm *.png
            rm *.html
            rm *.zip
          popd

          mkdir -p sources/5etools-img
          gh release download ${LATEST_VERSION} -D sources/5etools-img -R 5etools-mirror-3/5etools-img
          pushd sources/5etools-img
            zip -FF img-${LATEST_VERSION}.zip --out fixed.zip
            unzip -q fixed.zip
            rm *.z*
            du -sh .
            # replace all images w/ empty files. We don't care about image content for test purposes
            find img -type f | while read FILE; do echo > "$FILE"; done
            mv img/* .
            du -sh .
          popd

          # Don't grab all of homebrew. Too big
          mkdir -p sources/5e-homebrew/adventure
          mkdir -p sources/5e-homebrew/background
          mkdir -p sources/5e-homebrew/book
          mkdir -p sources/5e-homebrew/class
          mkdir -p sources/5e-homebrew/collection
          mkdir -p sources/5e-homebrew/creature
          mkdir -p sources/5e-homebrew/deity
          mkdir -p sources/5e-homebrew/optionalfeature
          mkdir -p sources/5e-homebrew/race
          mkdir -p sources/5e-homebrew/subclass

          paths=(
          "collection/MCDM Productions; Strongholds and Followers.json"
          "adventure/Anthony Joyce; The Blood Hunter Adventure.json"
          "adventure/Arcanum Worlds; Odyssey of the Dragonlords.json"
          "adventure/JVC Parry; Call from the Deep.json"
          "adventure/Kobold Press; Book of Lairs.json"
          "background/D&D Wiki; Featured Quality Backgrounds.json"
          "book/Ghostfire Gaming; Grim Hollow Campaign Guide.json"
          "book/Ghostfire Gaming; Stibbles Codex of Companions.json"
          "book/MCDM Productions; Arcadia Issue 3.json"
          "class/D&D Wiki; Swashbuckler.json"
          "class/Foxfire94; Vampire.json"
          "class/KibblesTasty; Inventor.json"
          "class/LaserLlama; Alternate Barbarian.json"
          "class/Matthew Mercer; Blood Hunter (2022).json"
          "class/badooga; Badooga's Psion.json"
          "collection/Arcana Games; Arkadia.json"
          "collection/Ghostfire Gaming; Grim Hollow - The Monster Grimoire.json"
          "collection/Jasmine Yang; Hamund's Herbalism Handbook.json"
          "collection/Keith Baker; Exploring Eberron.json"
          "collection/Kobold Press; Deep Magic 14 Elemental Magic.json"
          "collection/Kobold Press; Deep Magic.json"
          "collection/Loot Tavern; Heliana's Guide To Monster Hunting.json"
          "collection/MCDM Productions; The Talent and Psionics Open Playtest Round 2.json"
          "collection/Mage Hand Press; Valda's Spire of Secrets.json"
          "creature/Dragonix; Monster Manual Expanded III.json"
          "creature/Kobold Press; Creature Codex.json"
          "creature/Kobold Press; Tome of Beasts 2.json"
          "creature/Kobold Press; Tome of Beasts.json"
          "creature/MCDM Productions; Flee, Mortals! preview.json"
          "creature/MCDM Productions; Flee, Mortals!.json"
          "creature/Nerzugal Role-Playing; Nerzugal's Extended Bestiary.json"
          "deity/Frog God Games; The Lost Lands.json"
          "optionalfeature/laserllama; Laserllama's Exploit Compendium.json"
          "race/Middle Finger of Vecna; Archon.json"
          "subclass/LaserLlama; Druid Circles.json"
          )

          for i in "${paths[@]}"; do
            echo "$i"
            url=${i// /%20}
            echo "$url"
            curl -s -S -L -o "sources/5e-homebrew/$i" "https://raw.githubusercontent.com/TheGiddyLimit/homebrew/refs/heads/master/${url}"
          done

          # Don't grab all of unearthed arcana
          mkdir -p sources/5e-unearthed-arcana/collection

          paths=(
          "collection/Unearthed Arcana - Downtime.json"
          "collection/Unearthed Arcana - Encounter Building.json"
          "collection/Unearthed Arcana - Into the Wild.json"
          "collection/Unearthed Arcana - Quick Characters.json"
          "collection/Unearthed Arcana - Traps Revisited.json"
          "collection/Unearthed Arcana - When Armies Clash.json"
          "collection/Unearthed Arcana 2022 - Character Origins.json"
          "collection/Unearthed Arcana 2022 - Expert Classes.json"
          "collection/Unearthed Arcana 2022 - The Cleric and Revised Species.json"
          "collection/Unearthed Arcana 2023 - Bastions and Cantrips.json"
          "collection/Unearthed Arcana 2023 - Druid & Paladin.json"
          "collection/Unearthed Arcana 2023 - Player's Handbook Playtest 5.json"
          "collection/Unearthed Arcana 2023 - Player's Handbook Playtest 6.json"
          "collection/Unearthed Arcana 2023 - Player's Handbook Playtest 7.json"
          )

          for i in "${paths[@]}"; do
            echo "$i"
            url=${i// /%20}
            echo "$url"
            curl -s -S -L -o "sources/5e-unearthed-arcana/$i" "https://raw.githubusercontent.com/TheGiddyLimit/unearthed-arcana/refs/heads/master/${url}"
          done

          ls -al sources
          du -sh sources

